//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebcamViewer.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "14.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>Michalovce, Slovakia - Námestie osloboditeľov 01</string>
  <string>Michalovce, Slovakia - Námestie osloboditeľov 01 [raw]</string>
  <string>Nowy Targ, Poland - Restaurant ""U gazdy"" (Kamera na Tatry)</string>
  <string>Gelendzhik, Russia - Glavmore (Camera 2)</string>
  <string>Poprad, Slovakia - Weather station ""Funsat""</string>
  <string>Michalovce, Slovakia - Busová stanica</string>
  <string>Żywiec, Poland - Żywiec lake</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection camera_names {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["camera_names"]));
            }
            set {
                this["camera_names"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>http://www.michalovce.sk/webcam/michalovce.sk-camera-001.jpg</string>
  <string>http://46.150.192.118:8001/jpg/1/image.jpg</string>
  <string>http://www.ugazdy.pl/kamerka/obrazek.jpg</string>
  <string>http://static.glavmore.ru/cam/cam-1.jpg</string>
  <string>http://funsat.sk.d.websupport.sk/webcam/funsat.jpg</string>
  <string>http://gecom.sk/img/kam-autobuska-orig.jpg</string>
  <string>http://www.megasurf.pl/cam/Video01.jpg</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection camera_urls {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["camera_urls"]));
            }
            set {
                this["camera_urls"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool home_blurbehind {
            get {
                return ((bool)(this["home_blurbehind"]));
            }
            set {
                this["home_blurbehind"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool settings_showtitlebarcolor {
            get {
                return ((bool)(this["settings_showtitlebarcolor"]));
            }
            set {
                this["settings_showtitlebarcolor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool home_debugoverlay {
            get {
                return ((bool)(this["home_debugoverlay"]));
            }
            set {
                this["home_debugoverlay"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool home_archiveorg {
            get {
                return ((bool)(this["home_archiveorg"]));
            }
            set {
                this["home_archiveorg"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Update 2 Beta")]
        public string versionid {
            get {
                return ((string)(this["versionid"]));
            }
            set {
                this["versionid"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("20161008-00")]
        public string buildid {
            get {
                return ((string)(this["buildid"]));
            }
            set {
                this["buildid"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool settings_experiment_UpdateUI {
            get {
                return ((bool)(this["settings_experiment_UpdateUI"]));
            }
            set {
                this["settings_experiment_UpdateUI"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int ui_theme {
            get {
                return ((int)(this["ui_theme"]));
            }
            set {
                this["ui_theme"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("developer")]
        public string app_debugmode {
            get {
                return ((string)(this["app_debugmode"]));
            }
            set {
                this["app_debugmode"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool app_firstrun {
            get {
                return ((bool)(this["app_firstrun"]));
            }
            set {
                this["app_firstrun"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1.2 Prerelease")]
        public string webcamengine_version {
            get {
                return ((string)(this["webcamengine_version"]));
            }
            set {
                this["webcamengine_version"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public int ui_accent {
            get {
                return ((int)(this["ui_accent"]));
            }
            set {
                this["ui_accent"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>3</string>
  <string>3</string>
  <string>30</string>
  <string>10</string>
  <string>20</string>
  <string>3</string>
  <string>30</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection camera_refreshrates {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["camera_refreshrates"]));
            }
            set {
                this["camera_refreshrates"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool home_refreshenabled {
            get {
                return ((bool)(this["home_refreshenabled"]));
            }
            set {
                this["home_refreshenabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public double ui_animationspeed {
            get {
                return ((double)(this["ui_animationspeed"]));
            }
            set {
                this["ui_animationspeed"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"Webcam Viewer Update 2 Beta - 2016.10.08; feature level 0

Fixes:
- Autorefresh now stops when changing cameras, saving, or switching to a different page. This fixes many bugs with the image loading and autorefresh enabled.

Minor enchancements, tweaks & fixes
- Settings toggles now have a bigger, circular background for the mouse down animation.

Developer features
- A new ""Internal settngs"" page is available for the developer and internal channels. Right now the only working and useful page is the ""Debug log"", which allows you to see the new debug log.
- Debug logging is here, a toggle in the Developer settings has been added. It is enabled by default in developer, testing and internal builds. Release builds will have this disabled.
- The debug log page of Internal settings has been improved. There's a new toolbar with options like refreshing, deleting the log file and testing logging.")]
        public string changelog {
            get {
                return ((string)(this["changelog"]));
            }
            set {
                this["changelog"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool app_logging {
            get {
                return ((bool)(this["app_logging"]));
            }
            set {
                this["app_logging"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool experiment_NewFileBrowserUX {
            get {
                return ((bool)(this["experiment_NewFileBrowserUX"]));
            }
            set {
                this["experiment_NewFileBrowserUX"] = value;
            }
        }
    }
}

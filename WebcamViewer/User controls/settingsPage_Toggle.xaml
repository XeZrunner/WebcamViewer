<UserControl x:Name="usercontrol" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WebcamViewer.User_controls"
             xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls" x:Class="WebcamViewer.User_controls.settingsPage_Toggle"
             mc:Ignorable="d" SizeChanged="UserControl_SizeChanged"
             Height="50" Width="60">
    <UserControl.Resources>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">

            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>

            <Setter Property="Template">
                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Grid>
                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle x:Name="Rectangle" Visibility="Collapsed"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">

                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <!-- <Setter TargetName="Rectangle" Property="Fill" Value="#2F000000"/> -->
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="Toggle_In">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="24">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <SineEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Toggle_Out">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                <EasingDoubleKeyFrame KeyTime="0" Value="24"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <EasingDoubleKeyFrame x:Key="s_WidthHeightKeyFrame" KeyTime="0:0:1" Value="120"/>
        <EasingThicknessKeyFrame x:Key="s_MarginKeyFrame" KeyTime="0:0:1" Value="-120"/>

        <Storyboard x:Key="longMouseDownAnimation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="ellipse_Ripple">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <StaticResource ResourceKey="s_WidthHeightKeyFrame"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ellipse_Ripple">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <StaticResource ResourceKey="s_WidthHeightKeyFrame"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ellipse_Ripple">
                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                <StaticResource ResourceKey="s_MarginKeyFrame"/>
            </ThicknessAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse_Ripple">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentGrid_DownRectangle">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:1" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:1.6" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentGrid_DownRectangle">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        
        <Style x:Key="MainGridStyle" TargetType="{x:Type Grid}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <!-- <Setter Property="Background" Value="{DynamicResource settingsPage_foregroundSecondary3}"/> -->
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Button x:Name="button" Style="{DynamicResource ButtonStyle}" Click="button_Click" PreviewMouseDown="Button_MouseDown" PreviewMouseUp="button_PreviewMouseUp" PreviewMouseMove="button_PreviewMouseMove">

        <Grid x:Name="contentGrid" Style="{DynamicResource MainGridStyle}" ClipToBounds="True">
            <Grid.Clip>
                <EllipseGeometry RadiusX="30" RadiusY="30" Center="30,25" />
            </Grid.Clip>

            <Rectangle x:Name="contentGrid_DownRectangle" Fill="{DynamicResource settingsPage_foregroundSecondary3}" Visibility="Hidden"/>

            <Grid x:Name="grid" ClipToBounds="True" Width="0" Height="0" Margin="-30,-30">
                <Ellipse x:Name="ellipse_Ripple" Fill="{DynamicResource settingsPage_foregroundSecondary3}" Width="0" Height="0" RenderTransformOrigin="0.5,0.5"/>
            </Grid>

            <Border x:Name="border" CornerRadius="10" Height="22" Width="45" BorderBrush="{DynamicResource settingsPage_foregroundSecondary}" Background="Transparent" BorderThickness="2">

                <Border CornerRadius="10" BorderBrush="{Binding BorderBrush, ElementName=border}" Background="{Binding Background, ElementName=border}" BorderThickness="1" Margin="-1">

                    <Grid HorizontalAlignment="Stretch" Margin="4,0,3,0">

                        <Ellipse x:Name="ellipse" Fill="{DynamicResource settingsPage_foregroundSecondary}" Height="10" Width="10" HorizontalAlignment="Left" RenderTransformOrigin="0.5,0.5">
                            <Ellipse.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Ellipse.RenderTransform>
                        </Ellipse>

                    </Grid>

                </Border>

            </Border>

        </Grid>

    </Button>
</UserControl>
